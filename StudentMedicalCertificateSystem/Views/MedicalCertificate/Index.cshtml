@using StudentMedicalCertificateSystem.ViewModels;
@model StudentMedicalCertificateSystem.ViewModels.ShowMedicalCertificateViewModel

@{
    ViewData["Title"] = "Заявки";
}

<a class="btn btn-sm btn-primary" href="@Url.Action("Create")">Создать новую заявку</a>
<br />

@await Html.PartialAsync("_FilterPartial", new StudentMedicalCertificateSystem.ViewModels.FilterCertificatesViewModel())
@if (Model.Certificates.Count() != 0)
{
    <div class="container">
        <table>
            <thead>
                <tr>
                    <th>Номер заявки</th>
                    <th>Студент</th>
                    <th>Группа</th>
                    <th>Клиника</th>
                    <th>Диагноз</th>
                    <th>Справка</th>
                    <th>Дата начала болезни</th>
                    <th>Дата выздоровления</th>
                    <th>Комментарии сотрудника</th>
                    <th>Дата создания</th>
                    <th>Дата последнего обновления</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var certificate in Model.Certificates)
                {
                    <tr>
                        <td>@certificate.CertificateID</td>
                        <td>@certificate.Student.LastName @certificate.Student.FirstName @certificate.Student.Patronymic</td>
                        <td>@certificate.Student.Group.GroupName</td>
                        <td>@certificate.Clinic.ClinicName</td>
                        <td>@certificate.Diagnosis.DiagnosisName</td>
                        <td>
                            <a target="_blank" href="@Url.Action("ImageView", "MedicalCertificate", new { imagePath = certificate.CertificatePath })">Посмотреть справку</a>
                        </td>
                        <td>@certificate.IlnessDate.ToString("dd.MM.yyyy")</td>
                        <td>@certificate.RecoveryDate.ToString("dd.MM.yyyy")</td>
                        <td>@certificate.Answer</td>
                        <td>@certificate.CreatedAt</td>
                        <td>@certificate.UpdatedAt</td>
                        <td>
                            <a asp-controller="MedicalCertificate" asp-action="Edit" asp-route-id="@certificate.CertificateID">Редактировать</a> ||
                            <a asp-controller="MedicalCertificate" asp-action="Delete" asp-route-id="@certificate.CertificateID">Удалить</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="pagination">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @if (Model.PagingInfo.TotalPages > 1)
                    {
                        <li class="page-item @(Model.PagingInfo.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@GetPaginationUrl(1, Model)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;&laquo;</span>
                            </a>
                        </li>

                        @for (int i = 1; i <= Model.PagingInfo.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PagingInfo.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@GetPaginationUrl(i, Model)">@i</a>
                            </li>
                        }

                        <li class="page-item @(Model.PagingInfo.CurrentPage == Model.PagingInfo.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="@GetPaginationUrl(Model.PagingInfo.TotalPages, Model)" aria-label="Next">
                                <span aria-hidden="true">&raquo;&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
        @functions {
        string GetPaginationUrl(int page, ShowMedicalCertificateViewModel model)
        {
            if (model.FilterViewModel != null)
            {
                return Url.Action("Filter", new { page = page, studentData = model.FilterViewModel.StudentData, illnessDate = model.FilterViewModel.IlnessDate, recoveryDate = model.FilterViewModel.RecoveryDate });
            }
            else
            {
                return Url.Action("Index", new { page = page });
            }
        }
    }


    </div>
}
else
{
    <p>Увы, но ничего не найдено</p>
}

<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }

    th {
        background-color: #f2f2f2;
    }

    td:nth-child(3) {
        white-space: nowrap;
    }

</style>
